// src/components/CreateAuctionModal.js
import { useState, useEffect } from "react";
import { Modal, Button, Form, Row, Col, Alert, Card } from "react-bootstrap";

const CreateAuctionModal = ({ show, onHide, onCreate, playerData, inventoryItems }) => {
  const [selectedItem, setSelectedItem] = useState(null);
  const [formData, setFormData] = useState({
    start_price: "",
    price_step: "",
    buyout_price: "",
    duration_hours: 24
  });
  const [error, setError] = useState("");
  const [searchQuery, setSearchQuery] = useState("");
  const [loading, setLoading] = useState(false);
  const [filteredItems, setFilteredItems] = useState([]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å—ã
  const playerMoney = playerData?.money || 0;

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (show) {
      setSelectedItem(null);
      setFormData({
        start_price: "",
        price_step: "",
        buyout_price: "",
        duration_hours: 24
      });
      setError("");
      setSearchQuery("");
      setLoading(false);
      setFilteredItems(inventoryItems || []);
      console.log("CreateAuctionModal opened with inventory items:", inventoryItems);
    }
  }, [show, inventoryItems]);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É
  useEffect(() => {
    if (searchQuery) {
      const filtered = inventoryItems.filter(item => 
        item.name && item.name.toLowerCase().includes(searchQuery.toLowerCase())
      );
      setFilteredItems(filtered);
    } else {
      setFilteredItems(inventoryItems || []);
    }
  }, [searchQuery, inventoryItems]);

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–Ω—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–µ–¥–º–µ—Ç–∞
  useEffect(() => {
    if (selectedItem && selectedItem.value) {
      const itemValue = selectedItem.value;
      const basePrice = Math.round(itemValue / 2); // 50% –æ—Ç —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–∞
      const stepPrice = Math.round(itemValue * 0.1); // 10% –æ—Ç —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–∞
      
      setFormData(prev => ({
        ...prev,
        start_price: basePrice.toString(),
        price_step: stepPrice.toString(),
        buyout_price: itemValue.toString()
      }));
    }
  }, [selectedItem]);

  const handleCreate = async () => {
    if (!selectedItem) {
      setError("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è");
      return;
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ 0
    const startPrice = Number(formData.start_price) || 0;
    const priceStep = Number(formData.price_step) || 0;
    const buyoutPrice = Number(formData.buyout_price) || 0;

    if (startPrice <= 0 || priceStep <= 0) {
      setError("–¶–µ–Ω–∞ –∏ —à–∞–≥ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
      return;
    }

    if (buyoutPrice > 0 && buyoutPrice <= startPrice) {
      setError("–¶–µ–Ω–∞ –≤—ã–∫—É–ø–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Ü–µ–Ω—ã");
      return;
    }

    const commission = Math.ceil(formData.duration_hours / 24) * 500;
    if (playerMoney < commission) {
      setError(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–æ–º–∏—Å—Å–∏–∏: ${commission} üåï`);
      return;
    }

    setLoading(true);
    try {
      const lotData = {
        item_id: selectedItem.id,
        name: selectedItem.name,
        start_price: startPrice,
        price_step: priceStep,
        buyout_price: buyoutPrice,
        duration_hours: formData.duration_hours
      };

      await onCreate(lotData);
    } catch (error) {
      console.error("Error in handleCreate:", error);
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ—Ç–∞");
    } finally {
      setLoading(false);
    }
  };

  const handleInputChange = (field, value) => {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if (value === "" || /^\d*\.?\d*$/.test(value)) {
      setFormData(prev => ({
        ...prev,
        [field]: value
      }));
    }
  };

  const getItemType = (item) => {
    const typeMap = {
      'head': '–®–ª–µ–º',
      'cloak': '–ü–ª–∞—â',
      'breast_armor': '–î–æ—Å–ø–µ—Ö',
      'arm_armor': '–ù–∞—Ä—É—á–∏',
      'gloves': '–ü–µ—Ä—á–∞—Ç–∫–∏',
      'belt': '–ü–æ—è—Å',
      'leg_armor': '–ü–æ–Ω–æ–∂–∏',
      'boots': '–û–±—É–≤—å',
      'necklace': '–ê–º—É–ª–µ—Ç',
      'ring': '–ö–æ–ª—å—Ü–æ',
      'right_hand': '–û—Ä—É–∂–∏–µ',
      'left_hand': '–õ–µ–≤–∞—è —Ä—É–∫–∞',
      'secondary_weapon': '–ó–∞–ø–∞—Å–Ω–æ–µ –æ—Ä—É–∂–∏–µ',
      'supplies': '–†–∞—Å—Ö–æ–¥–Ω–∏–∫',
      'food': '–ï–¥–∞',
      'potions': '–ó–µ–ª—å–µ',
      'scroll': '–°–≤–∏—Ç–æ–∫',
      'reagent': '–†–µ–∞–≥–µ–Ω—Ç',
      'goods': '–¢–æ–≤–∞—Ä—ã',
    };
    return typeMap[item.type] || item.type || "–†–∞–∑–Ω–æ–µ";
  };

  return (
    <Modal show={show} onHide={onHide} centered className="fantasy-modal" size="lg">
      <Modal.Header closeButton className="fantasy-card-header fantasy-card-header-primary">
        <Modal.Title>üì¶ –í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        {error && (
          <Alert variant="danger" onClose={() => setError("")} dismissible>
            {error}
          </Alert>
        )}

        <Row>
          <Col md={6}>
            <h6 className="fantasy-text-primary mb-3">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:</h6>
            
            {/* –ü–æ–∏—Å–∫ */}
            <Form.Control
              type="text"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
              className="mb-3"
            />

            {filteredItems.length === 0 ? (
              <div className="text-center fantasy-text-muted py-4">
                {(inventoryItems || []).length === 0 
                  ? "–í –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è"
                  : "–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
                }
              </div>
            ) : (
              <div style={{ maxHeight: '400px', overflowY: 'auto' }}>
                {filteredItems.map(item => (
                  <Card
                    key={item.id}
                    className={`mb-2 fantasy-card ${
                      selectedItem?.id === item.id 
                        ? 'border-primary bg-light' 
                        : ''
                    }`}
                    style={{ cursor: 'pointer' }}
                    onClick={() => setSelectedItem(item)}
                  >
                    <Card.Body className="p-3">
                      <div className="d-flex justify-content-between align-items-start">
                        <div>
                          <h6 className="fantasy-text-primary mb-1">
                            {item.name}
                          </h6>
                          <small className="fantasy-text-muted">
                            –¢–∏–ø: {getItemType(item)}<br/>
                            –¶–µ–Ω–Ω–æ—Å—Ç—å: {item.value || 0} üåï<br/>
                            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.count} —à—Ç.
                          </small>
                        </div>
                      </div>
                    </Card.Body>
                  </Card>
                ))}
              </div>
            )}
          </Col>
          
          <Col md={6}>
            <div className="fantasy-card p-3">
              <h6 className="fantasy-text-primary mb-3">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ—Ç–∞:</h6>
              
              {selectedItem && (
                <div className="mb-3 p-2 fantasy-card bg-light">
                  <strong>–í—ã–±—Ä–∞–Ω:</strong> {selectedItem.name}<br/>
                  <small className="fantasy-text-muted">
                    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ (50% –æ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç–∏) –∏ —à–∞–≥ —Å—Ç–∞–≤–∫–∏ (10% –æ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç–∏)
                  </small>
                </div>
              )}

              <Form>
                <Form.Group className="mb-3">
                  <Form.Label>–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ (üåï)</Form.Label>
                  <Form.Control
                    type="text"
                    value={formData.start_price}
                    onChange={(e) => handleInputChange('start_price', e.target.value)}
                    placeholder="100"
                  />
                  <Form.Text className="text-muted">
                    –ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ª–æ—Ç–∞ (–∞–≤—Ç–æ: 50% –æ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∞)
                  </Form.Text>
                </Form.Group>

                <Form.Group className="mb-3">
                  <Form.Label>–®–∞–≥ —Å—Ç–∞–≤–∫–∏ (üåï)</Form.Label>
                  <Form.Control
                    type="text"
                    value={formData.price_step}
                    onChange={(e) => handleInputChange('price_step', e.target.value)}
                    placeholder="10"
                  />
                  <Form.Text className="text-muted">
                    –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ (–∞–≤—Ç–æ: 10% –æ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∞)
                  </Form.Text>
                </Form.Group>

                <Form.Group className="mb-3">
                  <Form.Label>–¶–µ–Ω–∞ –≤—ã–∫—É–ø–∞ (üåï)</Form.Label>
                  <Form.Control
                    type="text"
                    value={formData.buyout_price}
                    onChange={(e) => handleInputChange('buyout_price', e.target.value)}
                    placeholder={selectedItem?.value || "0"}
                  />
                  <Form.Text className="text-muted">
                    –¶–µ–Ω–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–∫—É–ø–∞ (–∞–≤—Ç–æ: –ø–æ–ª–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞, 0 - –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–∫—É–ø)
                  </Form.Text>
                </Form.Group>

                <Form.Group className="mb-3">
                  <Form.Label>–í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è</Form.Label>
                  <Form.Select
                    value={formData.duration_hours}
                    onChange={(e) => setFormData({
                      ...formData, 
                      duration_hours: Number(e.target.value)
                    })}
                  >
                    <option value={24}>24 —á–∞—Å–∞</option>
                    <option value={48}>48 —á–∞—Å–æ–≤</option>
                    <option value={72}>72 —á–∞—Å–∞</option>
                    <option value={168}>7 –¥–Ω–µ–π</option>
                  </Form.Select>
                  <Form.Text className="text-muted">
                    –ö–æ–º–∏—Å—Å–∏—è: {Math.ceil(formData.duration_hours / 24) * 500} üåï
                  </Form.Text>
                </Form.Group>

                <div className="fantasy-card p-2 bg-light">
                  <small className="fantasy-text-muted">
                    üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <strong>{playerMoney} üåï</strong><br/>
                    üì¶ –ö–æ–º–∏—Å—Å–∏—è: <strong>{Math.ceil(formData.duration_hours / 24) * 500} üåï</strong>
                  </small>
                </div>
              </Form>
            </div>
          </Col>
        </Row>
      </Modal.Body>
      <Modal.Footer>
        <Button 
          className="fantasy-btn fantasy-btn-secondary" 
          onClick={onHide}
          disabled={loading}
        >
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button 
          className="fantasy-btn fantasy-btn-gold"
          onClick={handleCreate}
          disabled={!selectedItem || loading || !formData.start_price || !formData.price_step}
        >
          {loading ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "üè∑Ô∏è –í—ã—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω"}
        </Button>
      </Modal.Footer>
    </Modal>
  );
};

export default CreateAuctionModal;