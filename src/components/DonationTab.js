// src/components/DonationTab.js
import React, { useState, useContext, useEffect } from 'react';
import { observer } from "mobx-react-lite";
import { Row, Col, Card, Button, Badge, Alert, Modal, Spinner } from "react-bootstrap";
import { Context } from "../index";
import GetDataById from "../http/GetData";
import { premiumPurchase } from "../http/premiumApi"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π API

const DonationTab = observer(() => {
  const { user } = useContext(Context);
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [showConfirmModal, setShowConfirmModal] = useState(false);
  const [success, setSuccess] = useState("");
  const [error, setError] = useState("");
  const [playerData, setPlayerData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [delay, setDelay] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å Character –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º
  useEffect(() => {
    const fetchPlayer = async () => {
      try {
        const playerDataResponse = await GetDataById();
        setPlayerData(playerDataResponse.data);
        user.setPlayer(playerDataResponse.data);
        setLoading(false);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞:", err);
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞");
        setLoading(false);
      }
    };

    fetchPlayer();
  }, [user]);

  useEffect(() => {
    if (playerData) {
      setTimeout(() => {
        setDelay(true);
      }, 1000);
    }
  }, [playerData]);

  // –°–ø–∏—Å–æ–∫ –¥–æ–Ω–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
  const donationProducts = [
    {
      id: 1,
      name: "üí∞ –¢–æ—Ä–≥–æ–≤–µ—Ü",
      description: "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É —Ç–æ—Ä–≥–æ–≤—Ü—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏",
      price: 200,
      currency: "üíé",
      features: ["–¢–æ—Ä–≥–æ–≤–ª—è –≤–Ω–µ –∞—É–∫—Ü–∏–æ–Ω–∞"],
      purchased: playerData?.upgrades?.includes("–¢–æ—Ä–≥–æ–≤–µ—Ü") || false,
      type: "permanent"
    },
    {
      id: 2,
      name: "‚ö° –†—ã—Å–∞–∫",
      description: "–í–µ—Ä–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏",
      price: 500,
      currency: "üíé",
      features: ["–£—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ"],
      purchased: playerData?.upgrades?.includes("–†—ã—Å–∞–∫") || false,
      type: "permanent"
    },
    {
      id: 3,
      name: "‚≠ê –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å (–ù–µ–¥–µ–ª—è)",
      description: "–û—Å–æ–±—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∏ –±–æ–Ω—É—Å—ã –Ω–∞ 7 –¥–Ω–µ–π",
      price: 300,
      currency: "üíé",
      features: ["+50% –∫ –æ–ø—ã—Ç—É", "+50% –∫ —à–∞–Ω—Å–∞–º –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤", "–û—Ç–¥—ã—Ö –ø–æ—Å–ª–µ –±–æ—è"],
      purchased: false,
      type: "premium",
      duration_days: 7
    },
    {
      id: 4,
      name: "‚≠ê –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å (–ú–µ—Å—è—Ü)",
      description: "–û—Å–æ–±—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∏ –±–æ–Ω—É—Å—ã –Ω–∞ 30 –¥–Ω–µ–π",
      price: 1000,
      currency: "üíé",
      features: ["+50% –∫ –æ–ø—ã—Ç—É", "+50% –∫ —à–∞–Ω—Å–∞–º –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤", "–û—Ç–¥—ã—Ö –ø–æ—Å–ª–µ –±–æ—è"],
      purchased: false,
      type: "premium", 
      duration_days: 30
    }
  ];

  const handlePurchaseClick = (product) => {
    setSelectedProduct(product);
    setShowConfirmModal(true);
    setError("");
  };

  const handleConfirmPurchase = async () => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π API –º–µ—Ç–æ–¥
      const result = await premiumPurchase(
        selectedProduct.id,
        selectedProduct.type,
        selectedProduct.duration_days
      );

      if (result.status === 200) {
        setSuccess(`–ü–æ–∫—É–ø–∫–∞ "${selectedProduct.name}" —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if (user.updatePlayerData) {
          user.updatePlayerData();
        }
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
        const playerDataResponse = await GetDataById();
        setPlayerData(playerDataResponse.data);
        user.setPlayer(playerDataResponse.data);
      } else {
        setError(result.detail || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ");
      }
    } catch (err) {
      setError(err.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏");
    }

    setShowConfirmModal(false);
    setSelectedProduct(null);
    
    setTimeout(() => {
      setSuccess("");
      setError("");
    }, 5000);
  };

  const formatPrice = (price, currency) => {
    return `${price.toLocaleString('ru-RU')} ${currency}`;
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å
  const isPremiumActive = playerData?.premium_active || false;

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å Character
  if (!delay) {
    return (
      <div className="d-flex justify-content-center align-items-center min-vh-50">
        <div className="text-center">
          <Spinner animation="border" variant="secondary" role="status" style={{ width: '3rem', height: '3rem' }}>
            <span className="visually-hidden">Loading...</span>
          </Spinner>
          <p className="fantasy-text-gold">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...</p>
        </div>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="d-flex justify-content-center align-items-center min-vh-50">
        <div className="text-center">
          <Spinner animation="border" variant="secondary" />
          <p className="mt-2 text-muted">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="fantasy-paper content-overlay">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      {success && (
        <Alert variant="success" className="fantasy-alert">
          <div className="text-center">
            <h5>üéâ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!</h5>
            <p className="mb-0">{success}</p>
          </div>
        </Alert>
      )}

      {error && (
        <Alert variant="danger" className="fantasy-alert">
          <div className="text-center">
            <h5>‚ùå –û—à–∏–±–∫–∞</h5>
            <p className="mb-0">{error}</p>
          </div>
        </Alert>
      )}

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center mb-5">
        <h2 className="fantasy-text-dark">üåü –ü—Ä–µ–º–∏—É–º –ú–∞–≥–∞–∑–∏–Ω</h2>
        <p className="fantasy-text-muted">
          –£–ª—É—á—à–∏—Ç–µ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –æ–ø—ã—Ç —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
        </p>
      </div>

      {/* –ë–∞–ª–∞–Ω—Å –¥–∞–ª–µ–æ–Ω–æ–≤ */}
      <Card className="fantasy-card mb-4">
        <Card.Body className="text-center">
          <h5 className="fantasy-text-primary">–í–∞—à –±–∞–ª–∞–Ω—Å</h5>
          <div className="fantasy-text-dark fs-3 fw-bold">
            {(playerData?.daleons || 0).toLocaleString('ru-RU')} üíé
          </div>
          {isPremiumActive && (
            <Badge bg="success" className="mt-2">
              ‚≠ê –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–µ–Ω
            </Badge>
          )}
        </Card.Body>
      </Card>

      {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
      <Row>
        {donationProducts.map((product) => {
          const isPurchased = product.type === "permanent" ? product.purchased : false;
          const isDisabled = isPurchased || (playerData?.daleons || 0) < product.price;
          
          return (
            <Col key={product.id} lg={6} className="mb-4">
              <Card className={`fantasy-card h-100`}>
                
                <Card.Body className="d-flex flex-column">
                  <div className="text-center mb-3">
                    <h4 className="fantasy-text-primary">{product.name}</h4>
                    {product.type === "permanent" && product.purchased && (
                      <Badge bg="success" className="mb-2">
                        ‚úÖ –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ
                      </Badge>
                    )}
                    {product.type === "premium" && isPremiumActive && (
                      <Badge bg="info" className="mb-2">
                        ‚≠ê –ê–∫—Ç–∏–≤–µ–Ω
                      </Badge>
                    )}
                  </div>

                  <Card.Text className="fantasy-text-dark flex-grow-1">
                    {product.description}
                  </Card.Text>

                  {/* –°–ø–∏—Å–æ–∫ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π */}
                  <ul className="fantasy-feature-list">
                    {product.features.map((feature, index) => (
                      <li key={index} className="fantasy-text-muted">
                        {feature}
                      </li>
                    ))}
                  </ul>

                  {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
                  <div className="mt-auto">
                    <div className="text-center mb-3">
                      <span className="fantasy-text-dark fs-3 fw-bold">
                        {formatPrice(product.price, product.currency)}
                      </span>
                    </div>
                    
                    <Button
                      className={`fantasy-btn w-100 ${
                        isDisabled 
                          ? 'fantasy-btn-secondary fantasy-btn-disabled' 
                          : 'fantasy-btn-gold'
                      }`}
                      onClick={() => !isDisabled && handlePurchaseClick(product)}
                      disabled={isDisabled}
                    >
                      {product.type === "permanent" && product.purchased 
                        ? '–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ' 
                        : (playerData?.daleons || 0) < product.price 
                          ? '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤'
                          : '–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏'
                      }
                    </Button>
                  </div>
                </Card.Body>
              </Card>
            </Col>
          );
        })}
      </Row>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <Card className="fantasy-card mt-4">
        <Card.Body>
          <h5 className="fantasy-text-primary text-center">üíé –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?</h5>
          <Row className="text-center">
            <Col md={3}>
              <div className="fs-1">‚ö°</div>
              <h6>–£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</h6>
              <small className="fantasy-text-muted">–î–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Ü–µ–ª–µ–π –±—ã—Å—Ç—Ä–µ–µ</small>
            </Col>
            <Col md={3}>
              <div className="fs-1">üéÅ</div>
              <h6>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</h6>
              <small className="fantasy-text-muted">–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</small>
            </Col>
            <Col md={3}>
              <div className="fs-1">üíù</div>
              <h6>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞</h6>
              <small className="fantasy-text-muted">–ü–æ–º–æ–≥–∞–π—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏—é –∏–≥—Ä—ã</small>
            </Col>
          </Row>
        </Card.Body>
      </Card>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ */}
      <Modal 
        show={showConfirmModal} 
        onHide={() => setShowConfirmModal(false)}
        centered
        className="fantasy-modal"
      >
        <Modal.Header closeButton className="fantasy-card-header fantasy-card-header-primary">
          <Modal.Title className="fantasy-text-gold">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏</Modal.Title>
        </Modal.Header>
        <Modal.Body className="fantasy-modal-body">
          {selectedProduct && (
            <div className="text-center">
              <h4 className="fantasy-text-primary mb-3">{selectedProduct.name}</h4>
              <p className="fantasy-text-dark">{selectedProduct.description}</p>
              <div className="fantasy-price-display mb-3">
                <span className="fantasy-text-gold fs-2 fw-bold">
                  {formatPrice(selectedProduct.price, selectedProduct.currency)}
                </span>
              </div>
              <Alert variant="info" className="fantasy-alert">
                <small>
                  –° –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ {selectedProduct.price} –¥–∞–ª–µ–æ–Ω–æ–≤
                </small>
              </Alert>
            </div>
          )}
        </Modal.Body>
        <Modal.Footer className="fantasy-modal-footer">
          <Button 
            className="fantasy-btn fantasy-btn-secondary"
            onClick={() => setShowConfirmModal(false)}
          >
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button 
            className="fantasy-btn fantasy-btn-gold"
            onClick={handleConfirmPurchase}
          >
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
});

export default DonationTab;